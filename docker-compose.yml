version: '3'
services:
    nginx:
        image: nginx:alpine
        volumes:
            - ./:/var/www/
            - ./_docker/nginx/conf.d/:/etc/nginx/conf.d/
        ports:
            - "80:80"
        restart: unless-stopped
        depends_on:
            - app
        logging:
            driver: 'json-file'
            options:
                max-size: '10m'
                max-file: '10'
        container_name: nginx_docker_diploma
        networks:
            - diploma

    app: # docker-compose exec app php artisan ..
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        expose:
            - 9000
        volumes:
            - ./:/var/www
            - ./_docker/app/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
            - ./_docker/app/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
        depends_on:
            - db
        environment:
            - PHP_IDE_CONFIG=serverName=docker
            - XDEBUG_CONFIG=remote_host=192.168.1.110
        logging:
            driver: 'json-file'
            options:
                max-size: '10m'
                max-file: '10'
        container_name: app_docker_diploma
        image: diploma
        networks:
            - diploma


    db: # docker-compose exec db bash =>  mysql -u root -p => show databases;
        image: mysql:5.7
        restart: always
        volumes:
            - ./tmp/db:/var/lib/mysql
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        ports:
            - "3306:3306"
        logging:
            driver: 'json-file'
            options:
                max-size: '10m'
                max-file: '10'
        container_name: db_docker_diploma
        networks:
            - diploma

    websockets:
        image: diploma
        command: [ 'php', 'artisan', 'websockets:serve' ]
        container_name: websockets_docker_diploma
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - '6001:6001'
        networks:
            - diploma

    worker:
        image: diplomaWorker
        command: [ 'php', 'artisan', 'queue:work' ]
        container_name: worker_docker_diploma
        restart: unless-stopped
        working_dir: /var/www
        volumes:
            - ./:/var/www
        networks:
            - diploma

    certbot:
        image: certbot/certbot
        container_name: certbot
        volumes:
            - ./_docker/certbot/conf/letsencrypt:/etc/letsencrypt
            - ./_docker/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        networks:
            - diploma

networks:
    diploma:
        driver: bridge

volumes:
    diplomas-data:
        driver: local
